version: '3.7'
services:
  postgres:
    image: 'postgres:12.0'
    container_name: postgres_db
    build:
      context: postgres_db
    env_file: variables.env
    ports:
      - '5401:5401'
    command: postgres -p 5401 -c shared_buffers=512MB -c effective_cache_size=1536MB -c work_mem=2621kB -c maintenance_work_mem=128MB -c max_connections=1000
    shm_size: '1gb'
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_log:/var/log/postgresql
      - postgres_etc:/etc/postgresql

  api_web_server:
    image: api_web_server
    container_name: api_web_server
    build:
      context: api_web_server
    env_file:
      - 'variables.env'
    restart: on-failure
    command: python3 wsgi.py
    # command: tail -f /dev/null
    depends_on:
      - "postgres"
    ports:
      - '5005:5005'
    tty: true

  bot_container:
    image: api_web_server
    container_name: bot_container
    env_file:
      - 'variables.env'
    restart: on-failure
    command: python3 bot.py
    # command: tail -f /dev/null
    depends_on:
      - "api_web_server"
    tty: true

  nginx_concert_picker:
    image: nginx_concert_picker
    container_name: nginx_concert_picker
    build:
      context: nginx
    ports:
      - '4444:4444'
    restart: on-failure
    depends_on:
      - "api_web_server"
    command: [nginx, '-g', 'daemon off;']  
    
volumes:
  postgres_data:
  postgres_log:
  postgres_etc:
